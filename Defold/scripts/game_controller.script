local ColyseusClient = require "colyseus.client"
local id
-- SERVER VARS
local server_adress = "localhost"
local server_port = "2567"

--VARS
local client
local room
-- 1 grid on server is this many pixel:
local scaling = 100;

local other_players = {}

function onStateChange(change)
	newx = room.state.players[id].x*scaling;
	newy = room.state.players[id].y*scaling;
	msg.post("default:/player#player", "Game State", {x = newx, y = newy});

	for other_id,value in pairs(room.state.players) do
		if other_id ~= id and room.state.players[other_id].x and not other_players[other_id] then 
			print(other_id, room.state.players[other_id])
			newx = room.state.players[other_id].x*scaling;
			newy = room.state.players[other_id].y*scaling;
			
			created_id = factory.create("default:/other_player_factory#factory", vmath.vector3(newx, newy, 1))
			other_players[other_id] = created_id
			
		elseif other_players[other_id] and other_id ~= id then
			newx = room.state.players[other_id].x*scaling;
			newy = room.state.players[other_id].y*scaling;
			-- go.set_position(vmath.vector3(newx, newy, 1), other_players[other_id])
			msg.post(other_players[other_id], "Game State", {x = newx, y = newy});
			
		end
	end
	
	
end


function init(self)
	msg.post(".", "acquire_input_focus");
	client = ColyseusClient.new("ws://" .. server_adress .. ":" .. server_port,false)
	client:join_or_create("Ascii", {}, function(err, room_instance)
		if err then
			print("ERROR JOINING ROOM")
			pprint(err)
			return
		end

		room = room_instance

		room.state.on_change = onStateChange;

		room:on_message("id", function(message)
			id = message;
		end);		
	end);

end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- client is inresponsive without loop
	-- no info on colyseus doc though
	client:loop()
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("move")) then
		room:send("move",message.dir);
	end
end

function on_input(self, action_id, action)
	if action_id == hash("Kolle") and action.pressed then
		print("Kolle!");
		room:send("serve","Kolle");
	elseif action_id == hash("Premium") and action.pressed then
		print("Premium Cola");
		room:send("serve","Premium Cola");
	end
	return true;
end