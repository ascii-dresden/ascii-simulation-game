local ColyseusClient = require "colyseus.client"

-- SERVER VARS
local server_adress = "localhost"
local server_port = "2567"

--VARS
local client
local room


function init(self)
	msg.post(".", "acquire_input_focus")
	client = ColyseusClient.new("ws://" .. server_adress .. ":" .. server_port,false)

	client:join_or_create("Ascii", {}, function(err, room_instance)
		if err then
			print("ERROR JOINING ROOM")
			pprint(err)
			return
		end

		room = room_instance

		room.state.on_change = function(change)
			print(room.state.currentBeverage);
		end

		
	end);

end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- client is inresponsive without loop
	-- no info on colyseus doc though
	client:loop()
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("Kolle") and action.pressed then
		print("Kolle!");
		room:send("serve","Kolle");
	elseif action_id == hash("Premium") and action.pressed then
		print("Premium Cola");
		room:send("serve","Premium Cola");
	end
	return true;
end