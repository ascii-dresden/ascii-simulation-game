local ColyseusClient = require "colyseus.client"
local id
-- SERVER VARS
local server_adress = "localhost"
local server_port = "2567"

--VARS
local client
local room
-- 1 grid on server is this many pixel:
local scaling = 100;

function onStateChange(change)
	newx = room.state.players[id].x*scaling;
	newy = room.state.players[id].y*scaling;
	msg.post("default:/player#player", "Game State", {x = newx, y = newy});
end


function init(self)
	client = ColyseusClient.new("ws://" .. server_adress .. ":" .. server_port,false)
	client:join_or_create("Ascii", {}, function(err, room_instance)
		if err then
			print("ERROR JOINING ROOM")
			pprint(err)
			return
		end

		room = room_instance

		room.state.on_change = onStateChange;

		room:on_message("id", function(message)
			id = message;
		end);		
	end);

end

function update(self, dt)
	-- client is inresponsive without loop
	-- no info on colyseus doc though
	client:loop()
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("move")) then
		room:send("move",message.dir);
	end
end
