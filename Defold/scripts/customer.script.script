function init(self)
	self.items = {}
	self.item_count = 0
	
end

function delete_items(items)
	if items then
		for _, v in pairs(items) do
			go.delete(v.id)
		end
	end
end

function update_item_positions(items)
	if items then
		local position = go.get_position();
		for k,v in pairs(items) do
			msg.post(v.id, "Game State", {x = position.x, y = position.y - (v.pos-1) * 20})
		end
	end
end

function update_item_text(items,wants)
	for k,v in pairs(items) do
		if wants[k] then
			msg.post(v.id, "Game State", { amount = wants[k], item = k})
		else
			msg.post(v.id, "Game State", {amount = 0})
		end
	end
end 

function add_item(self, type, ammount)
	local position = go.get_position();
	created_id = factory.create("#order_factory", vmath.vector3(position.x , position.y- self.item_count * 20,0.1), vmath.quat(),{},1)
	if created_id then
		self.order = true
		msg.post(created_id, "Game State", {item = type, amount = ammount})
		self.item_count = self.item_count + 1
		self.items[type] = { id = created_id , pos = self.item_count}
	end			
end

function on_message(self, message_id, message, sender)
	if message.sprite_id then
		sprite.play_flipbook("#sprite",hash("Customer_".. message.sprite_id))
	end

	if message.order and self.order then
		update_item_text(self.items,message.order)
	end
	if message.order and not self.order then
		--delete_items(self.items)
		for k, v in pairs(message.order) do
			if k ~= '__keys' then
				add_item(self, k, v)	
			end
		end
		self.item_count = 1
		add_item(self, "Money", 0)
	end
	if message.y then
		local position = go.get_position();
		position.y = message.y;
		go.set_position(position);
		update_item_positions(self.items)
	end
	if message.x then
		local position = go.get_position();
		position.x = message.x;
		go.set_position(position);
		update_item_positions(self.items)
	end
	
	if message.type then	
		--sprite.play_flipbook("#sprite",hash(message.type))
	end
end



function final(self)
	delete_items(self.items)
end