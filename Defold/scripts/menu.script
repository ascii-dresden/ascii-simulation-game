local game_controller = "default:/main#game_controller"


function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	
	self.show = true
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed

	if action.pressed then
		if action_id == hash("menu") then 
			
			if self.show then
				menu('disable')
			else
				menu('enable')
			end
			
		end

		if self.show then
		if action_id == hash("1") then 
			msg.post(game_controller, "room_id", {room_id = '1'});
			menu('disable')
			
		elseif action_id == hash("2") then 
			msg.post(game_controller, "room_id", {room_id = '2'});
			menu('disable')
			
		elseif action_id == hash("3") then 
			msg.post(game_controller, "room_id", {room_id = '3'});
			menu('disable')
			
		end
	end
	end
	
end

function menu(mode)
	-- mode enable or disable
	local menu_objects = {'cappucchino', 'coffee', 'customers', 'cashier', 'sink', 'trash', 'kolle', 'premium', 'zotrine', 'empty', 'refill', 'controls', 'bg'}
	for k,v in pairs(menu_objects) do
		msg.post("#" .. v, mode) --visible = false
	end
	self.show = mode == 'enable'
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
