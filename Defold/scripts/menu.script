local game_controller = "default:/main#game_controller"


function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")

	self.group_name = ""
	
	self.show = true
	self.group_set = false
	self.text_input_active = false
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action.pressed and not self.text_input_active then
		if action_id == hash("menu") then 
			
			if self.show then
				menu('disable')
				self.show = false
			else
				menu('enable')
				self.show = true
			end
		elseif action_id == hash('input') and not self.group_set then 
			self.text_input_active = true
		end
	end

	if self.text_input_active then
		if action_id == hash('typing') then
			self.group_name = self.group_name .. action.text
			label.set_text("#groupname", self.group_name)
		elseif action_id == hash('backspace') and action.repeated then
			local l = string.len(self.group_name)
			self.group_name = string.sub(self.group_name, 0, l-1)
			label.set_text("#groupname", self.group_name)
		elseif action_id == hash('enter') then
			self.text_input_active = false
			msg.post(game_controller, "room_id", {room_id = self.group_name});
			menu('disable')
			self.show = false
			self.group_set = true
		end
	end
	
end

function menu(mode)
	-- mode enable or disable
	local menu_objects = {'cappucchino', 'coffee', 'customers', 'cashier', 'sink', 'trash', 'kolle', 'premium', 'zotrine', 'empty', 'refill', 'controls', 'bg', 'group', 'groupname'}
	for k,v in pairs(menu_objects) do
		msg.post("#" .. v, mode) --visible = false
	end
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
